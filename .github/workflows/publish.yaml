name: Publish prerelease

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x]
        lib-name: [timeline-state-resolver, timeline-state-resolver-types]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare Environment
        run: |
          yarn install
          yarn build
        env:
          CI: true
      - name: Run tests
        run: |
          cd packages/${{ matrix.lib-name }}
          yarn unit
        env:
          CI: true

  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs:
      - test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - name: Check release is desired
        id: do-publish
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "No Token"
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "Publish nightly"
            echo "publish=nightly" >> $GITHUB_OUTPUT
          else
            echo "Publish experimental"
            echo "publish=experimental" >> $GITHUB_OUTPUT
          fi

      - name: Get the Prerelease tag
        id: prerelease-tag
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          echo "Git ref is: ${{ github.ref }}"
          if [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/main" ]]
          then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "Tag is: latest"
          elif [[ "${{ github.ref }}" =~ refs\/pull\/([0-9]+)\/merge ]]
          then
            echo "tag=pr-${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "Tag is: pr-${BASH_REMATCH[1]}"          
          elif [[ "${{ github.ref }}" =~ refs\/heads\/(.+) || "${{ github.ref }}" =~ refs\/tags\/(.+) ]]
          then
            echo "tag=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "Tag is: ${BASH_REMATCH[1]}"
          else
            echo "Could not find git tag"
            exit 1
          fi
          echo "Git ref is: ${{ github.ref }}"
      - name: Prepare Environment
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          yarn install
          yarn build
        env:
          CI: true
      - name: Bump version and build
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          git config --global user.email "info@superfly.tv"
          git config --global user.name "superflytvab"

          COMMIT_TIMESTAMP=$(git log -1 --pretty=format:%ct HEAD)
          COMMIT_DATE=$(date -d @$COMMIT_TIMESTAMP +%Y%m%d-%H%M%S)
          GIT_HASH=$(git rev-parse --short HEAD)
          PRERELEASE_TAG=nightly-$(echo "${{ steps.prerelease-tag.outputs.tag }}" | sed -r 's/[^a-z0-9]+/-/gi')
          yarn release:bump-prerelease --no-changelog --no-commit-hooks --preid "$PRERELEASE_TAG-$COMMIT_DATE-$GIT_HASH" prerelease --yes
        env:
          CI: true
      - name: Publish to NPM
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
          yarn lerna publish from-package --tag-version-prefix='' --dist-tag ${{ steps.do-publish.outputs.publish }} --yes --no-verify-access
        env:
          CI: true
