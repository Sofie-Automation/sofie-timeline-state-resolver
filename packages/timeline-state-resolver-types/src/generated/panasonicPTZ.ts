/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run "yarn generate-schema-types" to regenerate this file.
 */
import { ActionExecutionResult } from ".."
import { SetPanTiltSpeedPayload, GetPanTiltPositionResult, SetZoomSpeedPayload, GetZoomPositionResult, StorePresetPayload, RecallPresetPayload, ResetPresetPayload, SetFocusSpeedPayload, SetFocusModePayload, GetFocusPositionResult, GetFocusModeResult } from './generic-ptz-actions'


export interface PanasonicPTZOptions {
	host: string
	port: number
	https?: boolean
}

export interface MappingPanasonicPTZPresetMem {
	mappingType: MappingPanasonicPTZType.PresetMem
}

export interface MappingPanasonicPTZPresetSpeed {
	mappingType: MappingPanasonicPTZType.PresetSpeed
}

export interface MappingPanasonicPTZZoomSpeed {
	mappingType: MappingPanasonicPTZType.ZoomSpeed
}

export interface MappingPanasonicPTZZoom {
	mappingType: MappingPanasonicPTZType.Zoom
}

export enum MappingPanasonicPTZType {
	PresetMem = 'presetMem',
	PresetSpeed = 'presetSpeed',
	ZoomSpeed = 'zoomSpeed',
	Zoom = 'zoom',
}

export type SomeMappingPanasonicPTZ = MappingPanasonicPTZPresetMem | MappingPanasonicPTZPresetSpeed | MappingPanasonicPTZZoomSpeed | MappingPanasonicPTZZoom

export enum PanasonicPTZActions {
	SetPanTiltSpeed = 'setPanTiltSpeed',
	GetPanTiltPosition = 'getPanTiltPosition',
	SetZoomSpeed = 'setZoomSpeed',
	GetZoomPosition = 'getZoomPosition',
	StorePreset = 'storePreset',
	RecallPreset = 'recallPreset',
	ResetPreset = 'resetPreset',
	SetFocusSpeed = 'setFocusSpeed',
	SetFocusMode = 'setFocusMode',
	TriggerOnePushFocus = 'triggerOnePushFocus',
	GetFocusPosition = 'getFocusPosition',
	GetFocusMode = 'getFocusMode'
}
export interface PanasonicPTZActionMethods {
	[PanasonicPTZActions.SetPanTiltSpeed]: (id: string, payload: SetPanTiltSpeedPayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.GetPanTiltPosition]: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetPanTiltPositionResult>>,
	[PanasonicPTZActions.SetZoomSpeed]: (id: string, payload: SetZoomSpeedPayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.GetZoomPosition]: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetZoomPositionResult>>,
	[PanasonicPTZActions.StorePreset]: (id: string, payload: StorePresetPayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.RecallPreset]: (id: string, payload: RecallPresetPayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.ResetPreset]: (id: string, payload: ResetPresetPayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.SetFocusSpeed]: (id: string, payload: SetFocusSpeedPayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.SetFocusMode]: (id: string, payload: SetFocusModePayload) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.TriggerOnePushFocus]: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<void>>,
	[PanasonicPTZActions.GetFocusPosition]: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetFocusPositionResult>>,
	[PanasonicPTZActions.GetFocusMode]: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetFocusModeResult>>
}

export interface PanasonicPTZDeviceTypes {
	Options: PanasonicPTZOptions
	Mappings: SomeMappingPanasonicPTZ
	Actions: PanasonicPTZActionMethods
}
