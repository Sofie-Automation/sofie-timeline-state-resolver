/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run "yarn generate-schema-types" to regenerate this file.
 */
import { ActionExecutionResult } from ".."
import { SetPanTiltSpeedPayload, GetPanTiltPositionResult, SetZoomSpeedPayload, GetZoomPositionResult, StorePresetPayload, RecallPresetPayload, ResetPresetPayload, SetFocusSpeedPayload, SetFocusModePayload, GetFocusPositionResult, GetFocusModeResult } from './generic-ptz-actions'


export interface PanasonicPTZOptions {
	host: string
	port: number
	https?: boolean
}

export interface MappingPanasonicPTZPresetMem {
	mappingType: MappingPanasonicPTZType.PresetMem
}

export interface MappingPanasonicPTZPresetSpeed {
	mappingType: MappingPanasonicPTZType.PresetSpeed
}

export interface MappingPanasonicPTZZoomSpeed {
	mappingType: MappingPanasonicPTZType.ZoomSpeed
}

export interface MappingPanasonicPTZZoom {
	mappingType: MappingPanasonicPTZType.Zoom
}

export enum MappingPanasonicPTZType {
	PresetMem = 'presetMem',
	PresetSpeed = 'presetSpeed',
	ZoomSpeed = 'zoomSpeed',
	Zoom = 'zoom',
}

export type SomeMappingPanasonicPTZ = MappingPanasonicPTZPresetMem | MappingPanasonicPTZPresetSpeed | MappingPanasonicPTZZoomSpeed | MappingPanasonicPTZZoom

export interface PanasonicPTZActionMethods {
	setPanTiltSpeed: (id: string, payload: SetPanTiltSpeedPayload) => Promise<ActionExecutionResult<void>>,
	getPanTiltPosition: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetPanTiltPositionResult>>,
	setZoomSpeed: (id: string, payload: SetZoomSpeedPayload) => Promise<ActionExecutionResult<void>>,
	getZoomPosition: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetZoomPositionResult>>,
	storePreset: (id: string, payload: StorePresetPayload) => Promise<ActionExecutionResult<void>>,
	recallPreset: (id: string, payload: RecallPresetPayload) => Promise<ActionExecutionResult<void>>,
	resetPreset: (id: string, payload: ResetPresetPayload) => Promise<ActionExecutionResult<void>>,
	setFocusSpeed: (id: string, payload: SetFocusSpeedPayload) => Promise<ActionExecutionResult<void>>,
	setFocusMode: (id: string, payload: SetFocusModePayload) => Promise<ActionExecutionResult<void>>,
	triggerOnePushFocus: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<void>>,
	getFocusPosition: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetFocusPositionResult>>,
	getFocusMode: (id: string, payload: Record<string, never>) => Promise<ActionExecutionResult<GetFocusModeResult>>
}

export interface PanasonicPTZDeviceTypes {
	Options: PanasonicPTZOptions
	Mappings: SomeMappingPanasonicPTZ
	Actions: PanasonicPTZActionMethods
}
