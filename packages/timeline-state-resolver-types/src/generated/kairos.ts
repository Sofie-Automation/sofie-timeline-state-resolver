/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and re-run the "tsr-schema-types" tool to regenerate this file.
 */
import type { ActionExecutionResult } from "../actions"

export interface KairosOptions {
	/**
	 * Host of KAIROS server
	 */
	host: string
	/**
	 * Port of KAIROS server
	 */
	port?: number
}

export interface MappingKairosScene {
	sceneName: string[]
	mappingType: MappingKairosType.Scene
}

export interface MappingKairosSceneLayer {
	sceneName: string[]
	layerName: string[]
	mappingType: MappingKairosType.SceneLayer
}

export interface MappingKairosAux {
	auxName: string
	mappingType: MappingKairosType.Aux
}

export interface MappingKairosMacro {
	mappingType: MappingKairosType.Macro
}

export interface MappingKairosClipPlayer {
	playerId: number
	mappingType: MappingKairosType.ClipPlayer
}

export interface MappingKairosRamRecPlayer {
	playerId: number
	mappingType: MappingKairosType.RamRecPlayer
}

export interface MappingKairosStillPlayer {
	playerId: number
	mappingType: MappingKairosType.StillPlayer
}

export interface MappingKairosSoundPlayer {
	playerId: number
	mappingType: MappingKairosType.SoundPlayer
}

export enum MappingKairosType {
	Scene = 'scene',
	SceneLayer = 'scene-layer',
	Aux = 'aux',
	Macro = 'macro',
	ClipPlayer = 'clip-player',
	RamRecPlayer = 'ram-rec-player',
	StillPlayer = 'still-player',
	SoundPlayer = 'sound-player',
}

export type SomeMappingKairos = MappingKairosScene | MappingKairosSceneLayer | MappingKairosAux | MappingKairosMacro | MappingKairosClipPlayer | MappingKairosRamRecPlayer | MappingKairosStillPlayer | MappingKairosSoundPlayer

export interface ListClipsPayload {
	subDirectory?: string[]
}

export type ListClipsResult = {
	name: string[]
	size: number
	datetime?: number
	frames: number
	framerate: number
}[]

export interface ListStillsPayload {
	subDirectory?: string[]
}

export type ListStillsResult = {
	name: string[]
	size: number
	datetime?: number
}[]

export interface PlayMacroPayload {
	ref?: string[]
}

export enum KairosActions {
	ListClips = 'listClips',
	ListStills = 'listStills',
	PlayMacro = 'playMacro'
}
export interface KairosActionMethods {
	[KairosActions.ListClips]: (payload: ListClipsPayload) => Promise<ActionExecutionResult<ListClipsResult>>,
	[KairosActions.ListStills]: (payload: ListStillsPayload) => Promise<ActionExecutionResult<ListStillsResult>>,
	[KairosActions.PlayMacro]: (payload: PlayMacroPayload) => Promise<ActionExecutionResult<void>>
}

export interface KairosDeviceTypes {
	Options: KairosOptions
	Mappings: SomeMappingKairos
	Actions: KairosActionMethods
}
